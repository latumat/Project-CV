{"ast":null,"code":"var _jsxFileName = \"/Users/hi_im_thomas_/repos/Project-CV/cv-project/src/Components/NewExperience.js\",\n  _s5 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewExperience(_ref) {\n  _s5();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  let {\n    setPreviousExperience\n  } = _ref;\n  const [position, setPosition] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  let experienceCopy = [position, company, from, to];\n  function testing() {\n    console.log(experienceCopy);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-experience\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Experience \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: _s(e => {\n        _s();\n        setPosition(e.target.value);\n        useEffect(() => {\n          setPreviousExperience(experienceCopy);\n        });\n      }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"),\n      className: \"exp\",\n      type: \"text\",\n      placeholder: \"Position\",\n      value: position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: _s2(e => {\n        _s2();\n        setCompany(e.target.value);\n        useEffect(() => {\n          setPreviousExperience(experienceCopy);\n        });\n      }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"),\n      className: \"exp\",\n      type: \"text\",\n      placeholder: \"Company\",\n      value: company\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: _s3(e => {\n        _s3();\n        setFrom(e.target.value);\n        useEffect(() => {\n          setPreviousExperience(experienceCopy);\n        });\n      }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"),\n      className: \"exp\",\n      type: \"text\",\n      placeholder: \"From\",\n      value: from\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: _s4(e => {\n        _s4();\n        setTo(e.target.value);\n        useEffect(() => {\n          setPreviousExperience(experienceCopy);\n        });\n      }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"),\n      className: \"exp\",\n      type: \"text\",\n      placeholder: \"To\",\n      value: to\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testing,\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s5(NewExperience, \"jIylBM2JMFCBk08bFfQq0zoJQVc=\");\n_c = NewExperience;\nexport default NewExperience;\nvar _c;\n$RefreshReg$(_c, \"NewExperience\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NewExperience","_ref","_s5","_s","$RefreshSig$","_s2","_s3","_s4","setPreviousExperience","position","setPosition","company","setCompany","from","setFrom","to","setTo","experienceCopy","testing","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/hi_im_thomas_/repos/Project-CV/cv-project/src/Components/NewExperience.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction NewExperience({setPreviousExperience}) {\n    const [position, setPosition] = useState(\"\");\n    const [company, setCompany] = useState(\"\");\n    const [from, setFrom] = useState(\"\");\n    const [to, setTo] = useState(\"\");\n\n    let experienceCopy = [position, company, from, to];\n\n    function testing() {\n        console.log(experienceCopy)\n    }\n    return (\n        <div className=\"add-experience\">\n            <h1> Experience </h1>\n            <input onChange={(e) => {setPosition(e.target.value); useEffect(() => {setPreviousExperience(experienceCopy)})}} className=\"exp\" type=\"text\" placeholder=\"Position\" value={position}/>\n            <input onChange={(e) => {setCompany(e.target.value); useEffect(() => {setPreviousExperience(experienceCopy)})}} className=\"exp\" type=\"text\" placeholder=\"Company\" value={company}/>\n            <input onChange={(e) => {setFrom(e.target.value); useEffect(() => {setPreviousExperience(experienceCopy)})}} className=\"exp\" type=\"text\" placeholder=\"From\" value={from}/>\n            <input onChange={(e) => {setTo(e.target.value); useEffect(() => {setPreviousExperience(experienceCopy)})}} className=\"exp\" type=\"text\" placeholder=\"To\" value={to}/>\n            <button onClick={testing}>test</button>\n        </div>\n    )\n}\n\nexport default NewExperience;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}